// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#pragma once

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

#include "subsystems/Climber.h"

#include <frc2/command/CommandBase.h>
#include <frc2/command/CommandHelper.h>

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

/**
 *
 *
 * @author ExampleAuthor
 */
class ClimberMoveHeight : public frc2::CommandHelper<frc2::CommandBase, ClimberMoveHeight>
{
public:
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    explicit ClimberMoveHeight(int state, Climber *m_climber);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

    void Initialize() override;
    void Execute() override;
    bool IsFinished() override;
    void End(bool interrupted) override;
    bool RunsWhenDisabled() const override;

    typedef enum state_e
    {                         // Climber subsystem movement states
        NOCHANGE_HEIGHT = -1, // No change in climber height--maintain current position
        STOW_HEIGHT = 0,      // Move to stow height
        EXTEND_L2_HEIGHT = 1, // Move to extend to L2 height
        ROTATE_L3_HEIGHT = 2, // Move to rotate to L3 height
        EXTEND_L3_HEIGHT = 3, // Move to extend to L3 height
    } state_e;

private:
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLES

    int m_state; // in inches

    Climber *m_climber;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLES
};

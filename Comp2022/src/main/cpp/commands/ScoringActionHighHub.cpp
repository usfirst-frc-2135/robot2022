// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "commands/ScoringActionHighHub.h"

#include <spdlog/spdlog.h>

ScoringActionHighHub::ScoringActionHighHub(
    second_t waitTime,
    Intake *intake,
    FloorConveyor *fConv,
    VerticalConveyor *vConv,
    Shooter *shooter)
{
    // Use AddRequirements() here to declare subsystem dependencies
    // eg. AddRequirements(m_Subsystem);
    SetName("ScoringActionHighHub");

    spdlog::info("ScoringActionHighHub");

    // get wait time parameter

    // Add your commands here, e.g.
    // AddCommands(FooCommand(), BarCommand());

    AddCommands(
        frc2::ParallelDeadlineGroup{ frc2::WaitUntilCommand([shooter] { return shooter->IsAtDesiredRPM(); }),
                                     ShooterRun(Shooter::SHOOTERSPEED_HIGHHUB, shooter) },
        frc2::ParallelDeadlineGroup{ frc2::WaitCommand(waitTime),
                                     VerticalConveyorRun(VerticalConveyor::VCONVEYOR_ACQUIRE, vConv),
                                     FloorConveyorRun(FloorConveyor::FCONVEYOR_ACQUIRE, fConv),
                                     IntakeRun(Intake::INTAKE_ACQUIRE, intake) });
}

bool ScoringActionHighHub::RunsWhenDisabled() const
{
    return false;
}

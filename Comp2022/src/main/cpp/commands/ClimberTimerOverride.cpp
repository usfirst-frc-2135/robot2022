// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "RobotContainer.h"

#include <frc/smartdashboard/SmartDashboard.h>
#include <spdlog/spdlog.h>

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

#include "commands/ClimberTimerOverride.h"

ClimberTimerOverride::ClimberTimerOverride(Climber *m_climber) : m_climber(m_climber)
{
    // Use AddRequirements() here to declare subsystem dependencies
    // eg. AddRequirements(m_Subsystem);
    SetName("ClimberTimerOverride");

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
}

// Called just before this Command runs the first time
void ClimberTimerOverride::Initialize()
{
    spdlog::info("ClimberTimerOverride - Init");
    operatorController = RobotContainer::GetInstance()->getOperatorController();
}

// Called repeatedly when this Command is scheduled to run
void ClimberTimerOverride::Execute() {}

// Make this return true when this Command no longer needs to run execute()
bool ClimberTimerOverride::IsFinished()
{
    return operatorController->GetRawButtonPressed((int)frc::XboxController::Button::kY);
}

// Called once after isFinished returns true
void ClimberTimerOverride::End(bool interrupted)
{
    spdlog::info("ClimberTimerOverride - End");
}

bool ClimberTimerOverride::RunsWhenDisabled() const
{
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    return false;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
}

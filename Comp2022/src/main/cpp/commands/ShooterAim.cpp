// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "RobotContainer.h"

#include <spdlog/spdlog.h>

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

#include "commands/ShooterAim.h"

ShooterAim::ShooterAim(bool lightOn) : m_lightOn(lightOn)
{
    // Use AddRequirements() here to declare subsystem dependencies
    // eg. AddRequirements(m_Subsystem);
    SetName("ShooterAim");

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
}

// Called just before this Command runs the first time
void ShooterAim::Initialize()
{
    spdlog::info("ShooterAim - Init - Limelight {}", (m_lightOn) ? "ON" : "OFF");
    RobotContainer *robotContainer = RobotContainer::GetInstance();

    robotContainer->m_vision.SetLEDMode((m_lightOn) ? Vision::LED_ON : Vision::LED_OFF);
}

// Called repeatedly when this Command is scheduled to run
void ShooterAim::Execute() {}

// Make this return true when this Command no longer needs to run execute()
bool ShooterAim::IsFinished()
{
    return true;
}

// Called once after isFinished returns true
void ShooterAim::End(bool interrupted)
{
    spdlog::info("ShooterAim - End");
}

bool ShooterAim::RunsWhenDisabled() const
{
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    return true;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
}
